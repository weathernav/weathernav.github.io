{"version":3,"sources":["containers/NavigationContainer.js","containers/MapContainer.js","containers/WeatherPointContainer.js","components/WeatherPoint.js","components/WeatherPoints.js","components/Map.js","components/LocationSearch.js","containers/LocationSearchContainer.js","components/Controls.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["WEATHER_TIME_INTERVAL","parseInt","process","NavigationContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","locations","setState","directions","steps","routes","legs","weatherPoints","findWeatherPoints","map","p","timeElapsed","lat","end_location","lng","arguments","length","undefined","travelTime","totalTime","currStep","currDuration","duration","value","remainingSteps","slice","timeToCurrStep","objectSpread","concat","toConsumableArray","_this$state","onRouteSearch","bind","onDirections","children","Component","gmaps","google","maps","MapContainer","origin","destination","nextProps","_this2","_this$props","nextOrigin","nextDestination","DirectionsService","route","LatLng","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","WeatherPointContainer","err","weather","point","weatherTS","Date","now","axios","get","params","key","lon","units","resp","weatherData","data","timeDiffs","hourlyForecast","i","Math","abs","ts","index","indexOf","min","apply","precipPct","pop","temp","desc","description","timestamp","_context","t0","WeatherPoint","classes","react_default","a","createElement","lib","position","defaultVisible","InfoBox","options","closeBoxURL","enableEventPropagation","className","container","contents","List_default","ListItem_default","ListItemText_default","primary","withStyles","theme","backgroundColor","opacity","padding","fontSize","fontColor","WeatherPoints","points","containers_WeatherPointContainer","_ref","components_WeatherPoint","enhance","compose","withProps","loadingElement","style","height","containerElement","mapElement","withGoogleMap","defaultZoom","defaultCenter","components_WeatherPoints","LocationSearch","label","onSuggestionSelected","dist_default","renderTarget","textFieldProps","LocationSearchContainer","coordinates","suggestion","geocodeBySuggestion","then","results","Error","geometry","location","onCoords","catch","Controls","coords","defineProperty","root","ExpansionPanel_default","expanded","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","Typography_default","heading","ExpansionPanelDetails_default","containers_LocationSearchContainer","components_LocationSearch","_ref2","width","typography","pxToRem","fontWeight","fontWeightRegular","Navigation","components_Controls","containers_MapContainer","assign","components_Map","App","CssBaseline_default","containers_NavigationContainer","components_Navigation","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1fd0e4d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst WEATHER_TIME_INTERVAL = parseInt(\n  process.env.REACT_APP_WEATHER_TIME_INTERVAL\n); // 1hr intervals for weather info\n\nclass NavigationContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: {}\n    };\n  }\n  onRouteSearch(locations) {\n    this.setState({ locations });\n  }\n  onDirections(directions) {\n    const { steps } = directions.routes[0].legs[0];\n\n    const weatherPoints = this.findWeatherPoints(steps).map(p => {\n      return {\n        timeElapsed: p.timeElapsed,\n        lat: p.end_location.lat(),\n        lng: p.end_location.lng()\n      };\n    });\n    this.setState({ weatherPoints });\n  }\n\n  findWeatherPoints(steps, weatherPoints = [], travelTime = 0, totalTime = 0) {\n    if (steps.length <= 0) return weatherPoints;\n\n    const currStep = steps[0];\n    const currDuration = currStep.duration.value;\n    const remainingSteps = steps.slice(1);\n    const timeToCurrStep = totalTime + currDuration;\n    if (currDuration + travelTime > WEATHER_TIME_INTERVAL) {\n      return this.findWeatherPoints(\n        remainingSteps,\n        [{ timeElapsed: timeToCurrStep, ...currStep }, ...weatherPoints],\n        0,\n        timeToCurrStep\n      );\n    }\n    return this.findWeatherPoints(\n      remainingSteps,\n      weatherPoints,\n      travelTime + currDuration,\n      timeToCurrStep\n    );\n  }\n\n  render() {\n    const { locations, weatherPoints } = this.state;\n    const onRouteSearch = this.onRouteSearch.bind(this);\n    const onDirections = this.onDirections.bind(this);\n    return this.props.children({\n      locations,\n      weatherPoints,\n      onRouteSearch,\n      onDirections\n    });\n  }\n}\n\nNavigationContainer.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default NavigationContainer;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst gmaps = google.maps; // eslint-disable-line\n\nclass MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      directions: null,\n      origin: null,\n      destination: null\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { origin, destination, onDirections } = this.props;\n    const { origin: nextOrigin, destination: nextDestination } = nextProps;\n    if (!nextOrigin || !nextDestination) return;\n    if (\n      origin &&\n      origin.lat === nextOrigin.lat &&\n      origin.lng === nextOrigin.lng &&\n      destination &&\n      destination.lat === nextDestination.lat &&\n      destination.lng === nextDestination.lng\n    )\n      return;\n\n    const DirectionsService = new gmaps.DirectionsService();\n    DirectionsService.route(\n      {\n        origin: new gmaps.LatLng(nextOrigin.lat, nextOrigin.lng),\n        destination: new gmaps.LatLng(nextDestination.lat, nextDestination.lng),\n        travelMode: gmaps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status === gmaps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n          onDirections(result);\n        }\n      }\n    );\n  }\n\n  render() {\n    const { directions } = this.state;\n    return this.props.children({ directions });\n  }\n}\n\nMapContainer.propTypes = {\n  onDirections: PropTypes.func.isRequired,\n  origin: PropTypes.object,\n  destination: PropTypes.object,\n  children: PropTypes.func.isRequired\n};\nexport default MapContainer;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nclass WeatherPointContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      err: null,\n      weather: {}\n    };\n  }\n\n  async componentDidMount() {\n    const { point } = this.props;\n    const weatherTS = Date.now() / 1000 + point.timeElapsed;\n    try {\n      const resp = await axios.get(process.env.REACT_APP_WEATHER_FORECAST_URL, {\n        params: {\n          key: process.env.REACT_APP_WEATHER_FORECAST_KEY,\n          lat: point.lat,\n          lon: point.lng,\n          units: 'I'\n        }\n      });\n      const weatherData = resp.data.data;\n      const timeDiffs = weatherData.map((hourlyForecast, i) => {\n        return Math.abs(hourlyForecast.ts - weatherTS);\n      });\n      const index = timeDiffs.indexOf(Math.min.apply(Math, timeDiffs));\n      const weather = {\n        precipPct: weatherData[index].pop,\n        temp: weatherData[index].temp,\n        desc: weatherData[index].weather.description,\n        timestamp: new Date(weatherData[index].ts * 1000)\n      };\n      this.setState({ weather });\n    } catch (err) {\n      this.setState({ err });\n    }\n  }\n\n  render() {\n    const { err, weather } = this.state;\n    const { point } = this.props;\n    return this.props.children({ err, weather, point });\n  }\n}\n\nWeatherPointContainer.propTypes = {\n  children: PropTypes.func.isRequired,\n  point: PropTypes.object.isRequired\n};\nexport default WeatherPointContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { InfoBox } from 'react-google-maps/lib/components/addons/InfoBox';\nimport { Marker } from 'react-google-maps';\n\nconst gmaps = google.maps; // eslint-disable-line\n\nconst styles = theme => ({\n  container: { backgroundColor: 'white', opacity: 0.75, padding: '12px' },\n  contents: { fontSize: '16px', fontColor: '#08233B' }\n});\n\nclass WeatherPoint extends Component {\n  render() {\n    const { point, weather, classes } = this.props;\n    return (\n      <Marker position={point} defaultVisible={false}>\n        <InfoBox options={{ closeBoxURL: '', enableEventPropagation: true }}>\n          <div className={classes.container}>\n            <div className={classes.contents}>\n              <List>\n                <ListItem>\n                  <ListItemText primary={`Temp: ${weather.temp}°`} />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary={`Precipitation: ${weather.precipPct}%`}\n                  />\n                </ListItem>\n                <ListItem>\n                  <ListItemText primary={`Description: ${weather.desc}`} />\n                </ListItem>\n                <ListItem>\n                  <ListItemText primary={`Time: ${weather.timestamp}`} />\n                </ListItem>\n              </List>\n            </div>\n          </div>\n        </InfoBox>\n      </Marker>\n    );\n  }\n}\n\nWeatherPoint.propTypes = {\n  classes: PropTypes.object.isRequired,\n  point: PropTypes.object.isRequired,\n  weather: PropTypes.object.isRequired,\n  err: PropTypes.object\n};\nexport default withStyles(styles)(WeatherPoint);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport WeatherPointContainer from '../containers/WeatherPointContainer';\nimport WeatherPoint from './WeatherPoint';\n\nconst gmaps = google.maps; // eslint-disable-line\n\nclass WeatherPoints extends Component {\n  render() {\n    const { points } = this.props;\n    return points.map((point, i) => {\n      return (\n        <WeatherPointContainer key={i} point={point}>\n          {({ err, weather, point }) => (\n            <WeatherPoint err={err} weather={weather} point={point} />\n          )}\n        </WeatherPointContainer>\n      );\n    });\n  }\n}\n\nWeatherPoints.propTypes = {\n  points: PropTypes.array.isRequired\n};\nexport default WeatherPoints;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { compose, withProps } from 'recompose';\nimport {\n  withGoogleMap,\n  GoogleMap,\n  DirectionsRenderer\n} from 'react-google-maps';\n\nimport WeatherPoints from './WeatherPoints';\n\nconst gmaps = google.maps; // eslint-disable-line\n\nconst enhance = compose(\n  withProps({\n    loadingElement: <div style={{ height: '100%' }} />,\n    containerElement: <div style={{ height: '100vh' }} />,\n    mapElement: <div style={{ height: '100%' }} />\n  }),\n  withGoogleMap\n);\n\nclass Map extends Component {\n  render() {\n    const { weatherPoints, directions } = this.props;\n    return (\n      <GoogleMap defaultZoom={8} defaultCenter={{ lat: -34.397, lng: 150.644 }}>\n        {directions && <DirectionsRenderer directions={directions} />}\n        {weatherPoints && <WeatherPoints points={weatherPoints} />}\n      </GoogleMap>\n    );\n  }\n}\n\nMap.propTypes = {\n  directions: PropTypes.object,\n  weatherPoints: PropTypes.array\n};\nexport default enhance(Map);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MUIPlacesAutocomplete from 'mui-places-autocomplete';\n\nclass LocationSearch extends Component {\n  render() {\n    const { label, onSuggestionSelected } = this.props;\n    return (\n      <div>\n        <MUIPlacesAutocomplete\n          onSuggestionSelected={onSuggestionSelected}\n          renderTarget={() => <div />}\n          textFieldProps={{ label }}\n        />\n      </div>\n    );\n  }\n}\n\nLocationSearch.propTypes = {\n  label: PropTypes.string.isRequired,\n  onSuggestionSelected: PropTypes.func.isRequired\n};\nexport default LocationSearch;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { geocodeBySuggestion } from 'mui-places-autocomplete';\n\nclass LocationSearchContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      coordinates: null,\n      err: null\n    };\n  }\n\n  onSuggestionSelected(suggestion) {\n    geocodeBySuggestion(suggestion)\n      .then(results => {\n        if (results.length < 1) {\n          this.setState({\n            err: new Error(\n              'Geocode request completed successfully but without any results'\n            )\n          });\n\n          return;\n        }\n\n        const { geometry } = results[0];\n\n        const coordinates = {\n          lat: geometry.location.lat(),\n          lng: geometry.location.lng()\n        };\n        this.props.onCoords(coordinates);\n        this.setState({ coordinates });\n      })\n      .catch(err => {\n        this.setState({ err: err });\n      });\n  }\n\n  render() {\n    const { err } = this.state;\n    return this.props.children({\n      err,\n      onSuggestionSelected: this.onSuggestionSelected.bind(this)\n    });\n  }\n}\n\nLocationSearchContainer.propTypes = {\n  onCoords: PropTypes.func.isRequired,\n  children: PropTypes.func.isRequired\n};\nexport default LocationSearchContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport LocationSearch from './LocationSearch';\nimport LocationSearchContainer from '../containers/LocationSearchContainer';\n\nconst styles = theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n});\n\nclass Controls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: null,\n      destination: null\n    };\n  }\n\n  onCoords(location, coords) {\n    this.setState({ [location]: coords });\n    const { origin, destination } = this.state;\n    const { onRouteSearch } = this.props;\n    if (origin && destination) onRouteSearch({ origin, destination });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <ExpansionPanel expanded={true}>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography className={classes.heading}>\n              Search Weathernav\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <LocationSearchContainer\n              onCoords={this.onCoords.bind(this, 'origin')}\n            >\n              {({ err, onSuggestionSelected }) => (\n                <LocationSearch\n                  label=\"Search Origin\"\n                  err={err}\n                  onSuggestionSelected={onSuggestionSelected}\n                />\n              )}\n            </LocationSearchContainer>\n            <LocationSearchContainer\n              onCoords={this.onCoords.bind(this, 'destination')}\n            >\n              {({ err, onSuggestionSelected }) => (\n                <LocationSearch\n                  label=\"Search Destination\"\n                  err={err}\n                  onSuggestionSelected={onSuggestionSelected}\n                />\n              )}\n            </LocationSearchContainer>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nControls.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRouteSearch: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Controls);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MapContainer from '../containers/MapContainer';\nimport Map from './Map';\nimport Controls from './Controls';\n\nclass Navigation extends Component {\n  render() {\n    const {\n      locations,\n      weatherPoints,\n      onRouteSearch,\n      onDirections\n    } = this.props;\n    return (\n      <div>\n        <Controls onRouteSearch={onRouteSearch} />\n        <MapContainer onDirections={onDirections} {...locations}>\n          {({ directions }) => (\n            <Map weatherPoints={weatherPoints} directions={directions} />\n          )}\n        </MapContainer>\n      </div>\n    );\n  }\n}\n\nNavigation.propTypes = {\n  locations: PropTypes.object,\n  weatherPoints: PropTypes.array,\n  onRouteSearch: PropTypes.func.isRequired,\n  onDirections: PropTypes.func.isRequired\n};\nexport default Navigation;\n","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport NavigationContainer from './containers/NavigationContainer';\nimport Navigation from './components/Navigation';\n\nclass App extends Component {\n  render() {\n    return (\n      <CssBaseline>\n        <NavigationContainer>\n          {props => <Navigation {...props} />}\n        </NavigationContainer>\n      </CssBaseline>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}